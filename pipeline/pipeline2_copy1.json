{
	"name": "pipeline2_copy1",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.Filename1",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileName",
								"value": {
									"value": "@replace(pipeline().parameters.FileInput,'Sales' , '')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('FileName'),'Hourly')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy data2",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "ds_pipeline2_source",
												"type": "DatasetReference",
												"parameters": {
													"path": {
														"value": "@pipeline().parameters.Filename1",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_pipelin2_target",
												"type": "DatasetReference"
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "ds_pipeline2_source",
												"type": "DatasetReference",
												"parameters": {
													"path": {
														"value": "@pipeline().parameters.Filename1",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_pipelin2_target",
												"type": "DatasetReference"
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"FileInput": {
				"type": "string"
			},
			"Filename1": {
				"type": "array"
			}
		},
		"variables": {
			"FileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "AllactivitiesExamples"
		},
		"annotations": [],
		"lastPublishTime": "2023-03-16T13:38:54Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}